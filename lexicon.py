#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Author: Arne Neumann <arne-neumann@web.de>


class Entry(object):
    """
    defines an entry in the lexicon
    """
    def __init__(self, lex_id, lex_string, pos, required_args, 
                 optional_args, plus_args, grammatical_restrictions):
        self.lex_id = lex_id
        self.lex_string = lex_string
        self.pos = pos
        self.required_args = required_args
        self.optional_args = optional_args # regex: A?
        self.plus_args = plus_args # regex: A+
        self.grammatical_restrictions = grammatical_restrictions

class Entries():
    """creates Entry() instances
    
    Each lexicon entry of the form Entry(lex_id, lex_string, pos, 
    required_args, optional_args, plus_args, grammatical_restrictions) is 
    generated by its own method. 
    
    NOTE: These methods have to adhere to a naming convention, i.e. begin with 
    'genentry_'; otherwise, self.__init__ will fail!
    """
        
    def __init__ (self):
        """calls methods to generate entries and saves these in self.entries"""
        self.entries = []
        methods_list = dir(self) #lists all methods of Entries()
        for method_name in methods_list:
            if method_name.startswith('genentry_'):
                method = 'self.' + method_name + '()'
                entry = eval(method) # calls a method that generates a rule
                self.entries.append(entry)

    ### authorship and publication rules

    def genentry_publish1(self):
        """
        Der Autor X veröffentlichte das Buch Y im Verlag ABC.
        Im Jahr 1990 veröffentlichte der Autor X sein Buch (Y) (im Verlag ABC)
        
        TODO: add restrictions 'sein/ihr Buch', 'beim/im Verlag'
        """
        required_args = ["author", "title"]
        optional_args = ["publisher", "year"]
        plus_args = []
        grammatical_restrictions = {"TEMP": "prät", "AGENS": "author", 
                                    "PATIENS": "title"}
        entry = Entry("veroeffentlichen:1", "veröffentlichen", "V",
                      required_args, optional_args, plus_args, 
                      grammatical_restrictions)
        return entry
    
    def genentry_publish2a(self):
        """
        Der Verlag ABC veröffentlichte das Buch X (von Noam Chomsky).
        Im Jahr 2120 veröffentlichte der ABC-Verlag (das Buch) Syntax (von Noam 
        Chomsky).
        """
        required_args = ["publisher", "title"]
        optional_args = ["author", "year"]
        plus_args = []
        grammatical_restrictions = {"TEMP": "prät", "AGENS": "publisher", 
                                    "PATIENS": "title"}
        entry = Entry("veroeffentlichen:2", "veröffentlichen", "V",
                      required_args, optional_args, plus_args,
                      grammatical_restrictions)
        return entry
    
    def genentry_publish2b(self):
        """
        Im Jahr 2000 brachte der ABC-Verlag das Buch X (von Noam C.) heraus.
        Der Verlag ABC brachte "On Syntax" von Chomsky (im Jahr 2000) heraus.
        
        TODO: should be logically equivalent to genentry_publish2(), but linked 
        to a different surface structure (veröffentlichte vs. brachte heraus)
        """
        required_args = ["publisher", "title"]
        optional_args = ["author", "year"]
        plus_args = []
        grammatical_restrictions = {"TEMP": "prät", "AGENS": "publisher", 
                                    "PATIENS": "title"}
        entry = Entry("herausbringen:1", "herausbringen", "V",
                      required_args, optional_args, plus_args,
                      grammatical_restrictions)
        return entry
    
    def genentry_publish3a(self):
        """
        Das Buch X (von Noam Chomksy) wurde (im Jahr 2000 | im ABC-Verlag)+ 
        herausgebracht.

        TODO: passiv: AGENS == ""?
        TODO: prät: wurde veröffentlicht?
        """
        required_args = ["title"]
        optional_args = ["author"]
        plus_args = ["year", "publisher"]
        grammatical_restrictions = {"TEMP": "prät", "AGENS": "", 
                                    "PATIENS": "title"}
        entry = Entry("veroeffentlichen:3", "veröffentlichen", "V",
                      required_args, optional_args, plus_args,
                      grammatical_restrictions)
        return entry
    
    def genentry_publish3b(self):
        """
        Das Buch X (von Noam Chomksy) wurde (im Jahr 2000 | im ABC-Verlag)+ 
        herausgebracht.
    
        TODO: should be logically equiv. to 3a
        TODO: passiv: AGENS == ""?
        TODO: prät: wurde herausgebracht?
        """
        required_args = ["title"]
        optional_args = ["author"]
        plus_args = ["year", "publisher"]
        grammatical_restrictions = {"TEMP": "prät", "AGENS": "", 
                                    "PATIENS": "title"}
        entry = Entry("herausbringen:2", "herausbringen", "V",
                      required_args, optional_args, plus_args,
                      grammatical_restrictions)
        return entry
    
    def genentry_publish3c(self):
        """
        Das Buch X (von Noam Chomksy) kam (im Jahr 2000 | im ABC-Verlag)+ 
        heraus.
    
        TODO: should be logicalle equiv. to 3a/3b
        TODO: passiv: AGENS == ""?
        TODO: prät: kam heraus?
        """
        required_args = ["title"]
        optional_args = ["author"]
        plus_args = ["year", "publisher"]
        grammatical_restrictions = {"TEMP": "prät", "AGENS": "", 
                                    "PATIENS": "title"}
        entry = Entry("herauskommen", "herauskommen", "V",
                      required_args, optional_args, plus_args,
                      grammatical_restrictions)
        return entry
    
    def genentry_publish4(self):
        """
        (Das Buch) "On Syntax" (von N. Chomsky) erschien (im Jahr 1968 | im 
        Verlag ABC).
        Noam Chomsky's "On Syntax" erschien 1968 im ABC-Verlag.    
        """
        required_args = ["title"]
        optional_args = ["author"]
        plus_args = ["year", "publisher"]
        grammatical_restrictions = {"TEMP": "prät", "AGENS": "title", 
                                    "PATIENS": ""}
        entry = Entry("erscheinen", "erscheinen", "V",
                      required_args, optional_args, plus_args,
                      grammatical_restrictions)
        return entry


'''

def genentry_template():
    """
    """
    required_args = []
    optional_args = []
    plus_args = []
    grammatical_restrictions = {"TEMP": "", "AGENS": "", 
                                "PATIENS": ""}
    entry = Entry("", "", ""
                  required_args, optional_args, grammatical_restrictions)
    return entry

'''

if __name__ == "__main__":
    entries = Entries()
